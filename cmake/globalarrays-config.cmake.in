cmake_minimum_required( VERSION 3.17 FATAL_ERROR)

@PACKAGE_INIT@

set(ENABLE_BLAS       @ENABLE_BLAS@)
set(ENABLE_FORTRAN    @ENABLE_FORTRAN@)
set(ENABLE_SCALAPACK  @ENABLE_SCALAPACK@)
set(BUILD_SHARED_LIBS @BUILD_SHARED_LIBS@)

set(GA_MPI_LIBS MPI::MPI_C)
if(ENABLE_FORTRAN)
  enable_language(Fortran)
  set(GA_MPI_LIBS MPI::MPI_Fortran)
endif()

if (NOT TARGET Threads::Threads)
  set(THREADS_PREFER_PTHREAD_FLAG ON)
  find_package(Threads REQUIRED)
endif()

if(ENABLE_BLAS)
  list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}")
  list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}/linalg-modules")

  set(BLAS_VENDOR @BLAS_VENDOR@)
  set(@BLAS_VENDOR@_PREFERS_STATIC      @LINALG_PREFER_STATIC@)
  set(ReferenceLAPACK_PREFERS_STATIC    @LINALG_PREFER_STATIC@)
  set(ReferenceScaLAPACK_PREFERS_STATIC @LINALG_PREFER_STATIC@)

  set(@BLAS_VENDOR@_THREAD_LAYER    @LINALG_THREAD_LAYER@)
  set(BLAS_REQUIRED_COMPONENTS      @LINALG_REQUIRED_COMPONENTS@)
  set(LAPACK_REQUIRED_COMPONENTS    @LINALG_REQUIRED_COMPONENTS@)
  set(ScaLAPACK_REQUIRED_COMPONENTS @LINALG_REQUIRED_COMPONENTS@)

  set(MKLROOT @MKLROOT@)
  set(ESSLROOT @ESSLROOT@)
  set(BLISROOT @BLISROOT@)
  set(ReferenceBLASROOT @ReferenceBLASROOT@)
  set(ReferenceLAPACKROOT @ReferenceLAPACKROOT@)

  set(ENABLE_DPCPP @ENABLE_DPCPP@)
  if(ENABLE_DPCPP)
    set(DPCPP_ROOT @DPCPP_ROOT@)
    if(NOT TARGET Intel::SYCL)
      find_package(IntelSYCL REQUIRED)
    endif()
  endif()

  if(ENABLE_SCALAPACK)
    set(ReferenceScaLAPACKROOT @ReferenceScaLAPACKROOT@)

    if(NOT TARGET ScaLAPACK::ScaLAPACK)
      find_package(ScaLAPACK REQUIRED)
    endif()
  endif()

  if(NOT TARGET LAPACK::LAPACK)
    find_package(LAPACK REQUIRED)
  endif()

  if(NOT TARGET BLAS::BLAS)
    find_package(BLAS REQUIRED)
  endif()

  list(REMOVE_AT CMAKE_MODULE_PATH 0)
  list(REMOVE_AT CMAKE_MODULE_PATH 0)
endif()

if(NOT TARGET GlobalArrays::ga)
  include("${CMAKE_CURRENT_LIST_DIR}/globalarrays-targets.cmake")
endif()

if(NOT TARGET ${GA_MPI_LIBS})
  find_package(MPI REQUIRED)
endif()

set(GlobalArrays_FOUND TRUE)
set(GlobalArrays_LIBRARIES GlobalArrays::ga)
set(GlobalArrays_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@/ga")
